import { getRenderingEngine, StackViewport, VolumeViewport, } from '@cornerstonejs/core';
export default function voiSyncCallback(synchronizerInstance, sourceViewport, targetViewport, voiModifiedEvent) {
    const eventDetail = voiModifiedEvent.detail;
    const { volumeId, range } = eventDetail;
    const renderingEngine = getRenderingEngine(targetViewport.renderingEngineId);
    if (!renderingEngine) {
        throw new Error(`Rendering Engine does not exist: ${targetViewport.renderingEngineId}`);
    }
    const tViewport = renderingEngine.getViewport(targetViewport.viewportId);
    if (tViewport instanceof VolumeViewport) {
        tViewport.setProperties({
            voiRange: range,
        }, volumeId);
    }
    else if (tViewport instanceof StackViewport) {
        tViewport.setProperties({
            voiRange: range,
        });
    }
    else {
        throw new Error('Viewport type not supported.');
    }
    tViewport.render();
}
//# sourceMappingURL=voiSyncCallback.js.map