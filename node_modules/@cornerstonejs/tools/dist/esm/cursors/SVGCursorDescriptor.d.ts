import { SVGCursorDescriptor } from '../types';
declare const CursorSVG: {
    Angle: SVGCursorDescriptor;
    ArrowAnnotate: SVGCursorDescriptor;
    Bidirectional: SVGCursorDescriptor;
    CobbAngle: SVGCursorDescriptor;
    CircleROI: SVGCursorDescriptor;
    EllipticalROI: SVGCursorDescriptor;
    FreehandROI: SVGCursorDescriptor;
    FreehandROISculptor: SVGCursorDescriptor;
    Length: SVGCursorDescriptor;
    Probe: SVGCursorDescriptor;
    RectangleROI: SVGCursorDescriptor;
    TextMarker: SVGCursorDescriptor;
    Crosshairs: SVGCursorDescriptor;
    Eraser: SVGCursorDescriptor;
    Magnify: SVGCursorDescriptor;
    Pan: SVGCursorDescriptor;
    Rotate: SVGCursorDescriptor;
    StackScroll: SVGCursorDescriptor;
    WindowLevelRegion: SVGCursorDescriptor;
    WindowLevel: SVGCursorDescriptor;
    Zoom: SVGCursorDescriptor;
    SegmentationFreeHandEraseInside: SVGCursorDescriptor;
    SegmentationFreeHandFillInside: SVGCursorDescriptor;
    SegmentationFreeHandEraseOutside: SVGCursorDescriptor;
    SegmentationFreeHandFillOutside: SVGCursorDescriptor;
    SegmentationRectangleEraseInside: SVGCursorDescriptor;
    RectangleScissor: SVGCursorDescriptor;
    'RectangleScissor.FILL_INSIDE': SVGCursorDescriptor;
    'RectangleScissor.FILL_OUTSIDE': SVGCursorDescriptor;
    'RectangleScissor.ERASE_OUTSIDE': SVGCursorDescriptor;
    'RectangleScissor.ERASE_INSIDE': SVGCursorDescriptor;
    CircleScissor: SVGCursorDescriptor;
    'CircleScissor.FILL_INSIDE': SVGCursorDescriptor;
    'CircleScissor.ERASE_OUTSIDE': SVGCursorDescriptor;
    'CircleScissor.FILL_OUTSIDE': SVGCursorDescriptor;
};
declare function registerCursor(toolName: string, iconContent: string, viewBox: {
    x: number;
    y: number;
}): void;
declare function getDefinedSVGCursorDescriptor(name: string): SVGCursorDescriptor | undefined;
declare const svgCursorNames: string[];
export { getDefinedSVGCursorDescriptor, registerCursor, svgCursorNames, CursorSVG, };
