{"version":3,"file":"index.js","mappings":"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","sources":["webpack://cornerstoneStreamingImageVolumeLoader/webpack/universalModuleDefinition","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/regenerator/index.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/regenerator-runtime/runtime.js","webpack://cornerstoneStreamingImageVolumeLoader/external umd {\"root\":\"cornerstone3D\",\"commonjs\":\"@cornerstonejs/core\",\"commonjs2\":\"@cornerstonejs/core\",\"amd\":\"@cornerstonejs/core\"}","webpack://cornerstoneStreamingImageVolumeLoader/external umd {\"root\":\"window\",\"commonjs\":\"gl-matrix\",\"commonjs2\":\"gl-matrix\",\"amd\":\"gl-matrix\"}","webpack://cornerstoneStreamingImageVolumeLoader/webpack/bootstrap","webpack://cornerstoneStreamingImageVolumeLoader/webpack/runtime/compat get default export","webpack://cornerstoneStreamingImageVolumeLoader/webpack/runtime/define property getters","webpack://cornerstoneStreamingImageVolumeLoader/webpack/runtime/hasOwnProperty shorthand","webpack://cornerstoneStreamingImageVolumeLoader/webpack/runtime/make namespace object","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/makeVolumeMetadata.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/sortImageIdsAndGetSpacing.ts","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack://cornerstoneStreamingImageVolumeLoader/../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/autoLoad.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/scaleArray.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/BaseStreamingImageVolume.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/StreamingImageVolume.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/cornerstoneStreamingImageVolumeLoader.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/splitImageIdsBy4DTags.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/helpers/getVolumeInfo.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/StreamingDynamicImageVolume.ts","webpack://cornerstoneStreamingImageVolumeLoader/./src/cornerstoneStreamingDynamicImageVolumeLoader.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@cornerstonejs/core\"), require(\"gl-matrix\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@cornerstonejs/core\", \"gl-matrix\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneStreamingImageVolumeLoader\"] = factory(require(\"@cornerstonejs/core\"), require(\"gl-matrix\"));\n\telse\n\t\troot[\"cornerstoneStreamingImageVolumeLoader\"] = factory(root[\"cornerstone3D\"], root[\"window\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__953__, __WEBPACK_EXTERNAL_MODULE__976__) {\nreturn ","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__953__;","module.exports = __WEBPACK_EXTERNAL_MODULE__976__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { metaData } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\n/**\n * It creates a metadata object for a volume given the imageIds that compose it.\n * It uses the first imageId to get the metadata.\n *\n * @param imageIds - array of imageIds\n * @returns The volume metadata\n */\nexport default function makeVolumeMetadata(\n  imageIds: Array<string>\n): Types.Metadata {\n  const imageId0 = imageIds[0];\n\n  const {\n    pixelRepresentation,\n    bitsAllocated,\n    bitsStored,\n    highBit,\n    photometricInterpretation,\n    samplesPerPixel,\n  } = metaData.get('imagePixelModule', imageId0);\n\n  // Add list of VOIs stored on the DICOM.\n  const voiLut = [];\n\n  const voiLutModule = metaData.get('voiLutModule', imageId0);\n\n  // voiLutModule is not always present\n  let voiLUTFunction;\n  if (voiLutModule) {\n    const { windowWidth, windowCenter } = voiLutModule;\n    voiLUTFunction = voiLutModule?.voiLUTFunction;\n\n    if (Array.isArray(windowWidth)) {\n      for (let i = 0; i < windowWidth.length; i++) {\n        voiLut.push({\n          windowWidth: windowWidth[i],\n          windowCenter: windowCenter[i],\n        });\n      }\n    } else {\n      voiLut.push({\n        windowWidth: windowWidth,\n        windowCenter: windowCenter,\n      });\n    }\n  } else {\n    voiLut.push({\n      windowWidth: undefined,\n      windowCenter: undefined,\n    });\n  }\n\n  const { modality, seriesInstanceUID } = metaData.get(\n    'generalSeriesModule',\n    imageId0\n  );\n\n  const {\n    imageOrientationPatient,\n    pixelSpacing,\n    frameOfReferenceUID,\n    columns,\n    rows,\n  } = metaData.get('imagePlaneModule', imageId0);\n\n  // Map to dcmjs-style keywords. This is becoming the standard and makes it\n  // Easier to swap out cornerstoneDICOMImageLoader at a later date.\n  return {\n    BitsAllocated: bitsAllocated,\n    BitsStored: bitsStored,\n    SamplesPerPixel: samplesPerPixel,\n    HighBit: highBit,\n    PhotometricInterpretation: photometricInterpretation,\n    PixelRepresentation: pixelRepresentation,\n    Modality: modality,\n    ImageOrientationPatient: imageOrientationPatient,\n    PixelSpacing: pixelSpacing,\n    FrameOfReferenceUID: frameOfReferenceUID,\n    Columns: columns,\n    Rows: rows,\n    // This is a reshaped object and not a dicom tag:\n    voiLut,\n    VOILUTFunction: voiLUTFunction,\n    SeriesInstanceUID: seriesInstanceUID,\n  };\n}\n","import { vec3 } from 'gl-matrix';\nimport { metaData, getConfiguration } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\ntype SortedImageIdsItem = {\n  zSpacing: number;\n  origin: Types.Point3;\n  sortedImageIds: Array<string>;\n};\n/**\n * Given an array of imageIds, sort them based on their imagePositionPatient, and\n * also returns the spacing between images and the origin of the reference image\n *\n * @param imageIds - array of imageIds\n * @param scanAxisNormal - [x, y, z] array or gl-matrix vec3\n *\n * @returns The sortedImageIds, zSpacing, and origin of the first image in the series.\n */\nexport default function sortImageIdsAndGetSpacing(\n  imageIds: Array<string>,\n  scanAxisNormal: vec3 // Get gl matrix types?\n): SortedImageIdsItem {\n  const { imagePositionPatient: referenceImagePositionPatient } = metaData.get(\n    'imagePlaneModule',\n    imageIds[0]\n  );\n\n  const refIppVec = vec3.create();\n\n  // Check if we are using wadouri scheme\n  const usingWadoUri = imageIds[0].split(':')[0] === 'wadouri';\n\n  vec3.set(\n    refIppVec,\n    referenceImagePositionPatient[0],\n    referenceImagePositionPatient[1],\n    referenceImagePositionPatient[2]\n  );\n\n  let sortedImageIds: string[];\n  let zSpacing: number;\n\n  function getDistance(imageId: string) {\n    const { imagePositionPatient } = metaData.get('imagePlaneModule', imageId);\n\n    const positionVector = vec3.create();\n\n    vec3.sub(\n      positionVector,\n      referenceImagePositionPatient,\n      imagePositionPatient\n    );\n\n    return vec3.dot(positionVector, scanAxisNormal);\n  }\n\n  /**\n   * If we are using wadors and so have all image metadata cached ahead of time,\n   * then sort by image position in 3D space, and calculate average slice\n   * spacing from the entire volume. If not, then use the sampled images (1st\n   * and middle) to calculate slice spacing, and use the provided imageId order.\n   * Correct sorting must be done ahead of time.\n   */\n  if (!usingWadoUri) {\n    const distanceImagePairs = imageIds.map((imageId) => {\n      const distance = getDistance(imageId);\n\n      return {\n        distance,\n        imageId,\n      };\n    });\n\n    distanceImagePairs.sort((a, b) => b.distance - a.distance);\n\n    sortedImageIds = distanceImagePairs.map((a) => a.imageId);\n    const numImages = distanceImagePairs.length;\n\n    // Calculated average spacing.\n    // We would need to resample if these are not similar.\n    // It should be up to the host app to do this if it needed to.\n    zSpacing =\n      Math.abs(\n        distanceImagePairs[numImages - 1].distance -\n          distanceImagePairs[0].distance\n      ) /\n      (numImages - 1);\n  } else {\n    // Using wadouri, so we have only prefetched the first, middle, and last\n    // images for metadata. Assume initial imageId array order is pre-sorted,\n    // but check orientation.\n    const prefetchedImageIds = [\n      imageIds[0],\n      imageIds[Math.floor(imageIds.length / 2)],\n    ];\n    sortedImageIds = imageIds;\n    const firstImageDistance = getDistance(prefetchedImageIds[0]);\n    const middleImageDistance = getDistance(prefetchedImageIds[1]);\n    if (firstImageDistance - middleImageDistance < 0) {\n      sortedImageIds.reverse();\n    }\n\n    // Calculate average spacing between the first and middle prefetched images,\n    // otherwise fall back to DICOM `spacingBetweenSlices`\n    const metadataForMiddleImage = metaData.get(\n      'imagePlaneModule',\n      prefetchedImageIds[1]\n    );\n    if (!metadataForMiddleImage) {\n      throw new Error('Incomplete metadata required for volume construction.');\n    }\n\n    const positionVector = vec3.create();\n\n    vec3.sub(\n      positionVector,\n      referenceImagePositionPatient,\n      metadataForMiddleImage.imagePositionPatient\n    );\n    const distanceBetweenFirstAndMiddleImages = vec3.dot(\n      positionVector,\n      scanAxisNormal\n    );\n    zSpacing =\n      Math.abs(distanceBetweenFirstAndMiddleImages) /\n      Math.floor(imageIds.length / 2);\n  }\n\n  const { imagePositionPatient: origin, sliceThickness } = metaData.get(\n    'imagePlaneModule',\n    sortedImageIds[0]\n  );\n\n  const { strictZSpacingForVolumeViewport } = getConfiguration().rendering;\n\n  // We implemented these lines for multiframe dicom files that does not have\n  // position for each frame, leading to incorrect calculation of zSpacing = 0\n  // If possible, we use the sliceThickness, but we warn about this dicom file\n  // weirdness. If sliceThickness is not available, we set to 1 just to render\n  if (zSpacing === 0 && !strictZSpacingForVolumeViewport) {\n    if (sliceThickness) {\n      console.log('Could not calculate zSpacing. Using sliceThickness');\n      zSpacing = sliceThickness;\n    } else {\n      console.log(\n        'Could not calculate zSpacing. The VolumeViewport visualization is compromised. Setting zSpacing to 1 to render'\n      );\n      zSpacing = 1;\n    }\n  }\n  const result: SortedImageIdsItem = {\n    zSpacing,\n    origin,\n    sortedImageIds,\n  };\n\n  return result;\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import { getRenderingEngines, utilities } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\n\n//import type { Types } from '@cornerstonejs/core'\n\ntype RenderingEngineAndViewportIds = {\n  renderingEngine: Types.IRenderingEngine | undefined; //Types.IRenderingEngine | undefined\n  viewportIds: Array<string>;\n};\n\n/**\n * Given a volumeId, it finds the viewports and renderingEngines that\n * include that volume, and triggers a render if renderingEngine is available.\n *\n * @param volumeId - The Id of the volume\n */\nconst autoLoad = (volumeId: string): void => {\n  const renderingEngineAndViewportIds =\n    getRenderingEngineAndViewportsContainingVolume(volumeId);\n\n  if (!renderingEngineAndViewportIds || !renderingEngineAndViewportIds.length) {\n    return;\n  }\n\n  renderingEngineAndViewportIds.forEach(({ renderingEngine, viewportIds }) => {\n    if (!renderingEngine.hasBeenDestroyed) {\n      renderingEngine.renderViewports(viewportIds);\n    }\n  });\n};\n\nfunction getRenderingEngineAndViewportsContainingVolume(\n  volumeId: string\n): Array<RenderingEngineAndViewportIds> {\n  const renderingEnginesArray = getRenderingEngines();\n\n  const renderingEngineAndViewportIds = [];\n\n  for (let i = 0; i < renderingEnginesArray.length; i++) {\n    const renderingEngine = renderingEnginesArray[i];\n    const viewports = utilities.getViewportsWithVolumeId(\n      volumeId,\n      renderingEngine.id\n    );\n\n    if (viewports.length) {\n      renderingEngineAndViewportIds.push({\n        renderingEngine,\n        viewportIds: viewports.map((viewport) => viewport.id),\n      });\n    }\n  }\n\n  return renderingEngineAndViewportIds;\n}\n\nexport default autoLoad;\n","import type { Types } from '@cornerstonejs/core';\n\n/**\n * Given a pixel array, rescale the pixel values using the rescale slope and\n * intercept and if modality is PT it uses the suv values to scale the array\n * @param array - The array to be scaled.\n * @param scalingParameters - The scaling parameters\n * @returns The array is being scaled\n */\nexport default function scaleArray(\n  array: Float32Array | Uint8Array | Uint16Array | Int16Array,\n  scalingParameters: Types.ScalingParameters\n): Float32Array | Uint8Array | Uint16Array | Int16Array {\n  const arrayLength = array.length;\n  const { rescaleSlope, rescaleIntercept, suvbw } = scalingParameters;\n\n  if (scalingParameters.modality === 'PT') {\n    if (typeof suvbw !== 'number') {\n      return array;\n    }\n\n    for (let i = 0; i < arrayLength; i++) {\n      array[i] = suvbw * (array[i] * rescaleSlope + rescaleIntercept);\n    }\n  } else {\n    for (let i = 0; i < arrayLength; i++) {\n      array[i] = array[i] * rescaleSlope + rescaleIntercept;\n    }\n  }\n\n  return array;\n}\n","import {\n  Enums,\n  eventTarget,\n  metaData,\n  imageLoadPoolManager,\n  triggerEvent,\n  ImageVolume,\n  cache,\n  imageLoader,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\n\nimport type { Types } from '@cornerstonejs/core';\nimport { scaleArray, autoLoad } from './helpers';\n\nconst requestType = Enums.RequestType.Prefetch;\nconst { getMinMax } = csUtils;\n\n/**\n * Streaming Image Volume Class that extends ImageVolume base class.\n * It implements load method to load the imageIds and insert them into the volume.\n */\nexport default class BaseStreamingImageVolume extends ImageVolume {\n  private framesLoaded = 0;\n  private framesProcessed = 0;\n  protected numFrames: number;\n  protected cornerstoneImageMetaData = null;\n\n  loadStatus: {\n    loaded: boolean;\n    loading: boolean;\n    cancelled: boolean;\n    cachedFrames: Array<boolean>;\n    callbacks: Array<(...args: unknown[]) => void>;\n  };\n\n  constructor(\n    imageVolumeProperties: Types.IVolume,\n    streamingProperties: Types.IStreamingVolumeProperties\n  ) {\n    super(imageVolumeProperties);\n    this.imageIds = streamingProperties.imageIds;\n    this.loadStatus = streamingProperties.loadStatus;\n    this.numFrames = this._getNumFrames();\n\n    this._createCornerstoneImageMetaData();\n  }\n\n  /**\n   * Returns the number of frames stored in a scalarData object. The number of\n   * frames is equal to the number of images for 3D volumes or the number of\n   * frames per time poins for 4D volumes.\n   * @returns number of frames per volume\n   */\n  private _getNumFrames(): number {\n    const { imageIds, scalarData } = this;\n    const scalarDataCount = this.isDynamicVolume() ? scalarData.length : 1;\n\n    return imageIds.length / scalarDataCount;\n  }\n\n  private _getScalarDataLength(): number {\n    const { scalarData } = this;\n    return this.isDynamicVolume()\n      ? (<Types.VolumeScalarData[]>scalarData)[0].length\n      : (<Types.VolumeScalarData>scalarData).length;\n  }\n\n  /**\n   * Creates the metadata required for converting the volume to an cornerstoneImage\n   */\n  private _createCornerstoneImageMetaData() {\n    const { numFrames } = this;\n\n    if (numFrames === 0) {\n      return;\n    }\n\n    const bytesPerImage = this.sizeInBytes / numFrames;\n    const scalarDataLength = this._getScalarDataLength();\n    const numComponents = scalarDataLength / this.numVoxels;\n    const pixelsPerImage =\n      this.dimensions[0] * this.dimensions[1] * numComponents;\n\n    const { PhotometricInterpretation, voiLut, VOILUTFunction } = this.metadata;\n\n    let windowCenter = [];\n    let windowWidth = [];\n\n    if (voiLut && voiLut.length) {\n      windowCenter = voiLut.map((voi) => {\n        return voi.windowCenter;\n      });\n\n      windowWidth = voiLut.map((voi) => {\n        return voi.windowWidth;\n      });\n    }\n\n    const color = numComponents > 1 ? true : false; //todo: fix this\n\n    this.cornerstoneImageMetaData = {\n      bytesPerImage,\n      numComponents,\n      pixelsPerImage,\n      windowCenter,\n      windowWidth,\n      color,\n      spacing: this.spacing,\n      dimensions: this.dimensions,\n      PhotometricInterpretation,\n      voiLUTFunction: VOILUTFunction,\n      invert: PhotometricInterpretation === 'MONOCHROME1',\n    };\n  }\n\n  /**\n   * Converts imageIdIndex into frameIndex which will be the same\n   * for 3D volumes but different for 4D volumes\n   */\n  private _imageIdIndexToFrameIndex(imageIdIndex: number): number {\n    return imageIdIndex % this.numFrames;\n  }\n\n  /**\n   * Return all scalar data objects (buffers) which will be only one for\n   * 3D volumes and one per time point for 4D volumes\n   * images of each 3D volume is stored\n   * @returns scalar data array\n   */\n  public getScalarDataArrays(): Types.VolumeScalarData[] {\n    return this.isDynamicVolume()\n      ? <Types.VolumeScalarData[]>this.scalarData\n      : [<Types.VolumeScalarData>this.scalarData];\n  }\n\n  private _getScalarDataByImageIdIndex(\n    imageIdIndex: number\n  ): Types.VolumeScalarData {\n    if (imageIdIndex < 0 || imageIdIndex >= this.imageIds.length) {\n      throw new Error('imageIdIndex out of range');\n    }\n\n    const scalarDataArrays = this.getScalarDataArrays();\n    const scalarDataIndex = Math.floor(imageIdIndex / this.numFrames);\n\n    return scalarDataArrays[scalarDataIndex];\n  }\n\n  protected invalidateVolume(immediate: boolean): void {\n    const { imageData, vtkOpenGLTexture } = this;\n    const { numFrames } = this;\n\n    for (let i = 0; i < numFrames; i++) {\n      vtkOpenGLTexture.setUpdatedFrame(i);\n    }\n\n    imageData.modified();\n\n    if (immediate) {\n      autoLoad(this.volumeId);\n    }\n  }\n\n  /**\n   * It cancels loading the images of the volume. It sets the loading status to false\n   * and filters any imageLoad request in the requestPoolManager that has the same\n   * volumeId\n   */\n  public cancelLoading = (): void => {\n    const { loadStatus } = this;\n\n    if (!loadStatus || !loadStatus.loading) {\n      return;\n    }\n\n    // Set to not loading.\n    loadStatus.loading = false;\n    loadStatus.cancelled = true;\n\n    // Remove all the callback listeners\n    this.clearLoadCallbacks();\n\n    // Create a filter function which only keeps requests\n    // which do not match this volume's Id\n    const filterFunction = ({ additionalDetails }) => {\n      return additionalDetails.volumeId !== this.volumeId;\n    };\n\n    // Instruct the request pool manager to filter queued\n    // requests to ensure requests we no longer need are\n    // no longer sent.\n    imageLoadPoolManager.filterRequests(filterFunction);\n  };\n\n  /**\n   * Clear the load callbacks\n   */\n  public clearLoadCallbacks(): void {\n    this.loadStatus.callbacks = [];\n  }\n\n  /**\n   * It triggers a prefetch for images in the volume.\n   * @param callback - A callback function to be called when the volume is fully loaded\n   * @param priority - The priority for loading the volume images, lower number is higher priority\n   * @returns\n   */\n  public load = (\n    callback: (...args: unknown[]) => void,\n    priority = 5\n  ): void => {\n    const { imageIds, loadStatus, numFrames } = this;\n\n    if (loadStatus.loading === true) {\n      console.log(\n        `loadVolume: Loading is already in progress for ${this.volumeId}`\n      );\n      return; // Already loading, will get callbacks from main load.\n    }\n\n    const { loaded } = this.loadStatus;\n    const totalNumFrames = imageIds.length;\n\n    if (loaded) {\n      if (callback) {\n        callback({\n          success: true,\n          framesLoaded: totalNumFrames,\n          framesProcessed: totalNumFrames,\n          numFrames,\n          totalNumFrames,\n        });\n      }\n      return;\n    }\n\n    if (callback) {\n      this.loadStatus.callbacks.push(callback);\n    }\n\n    this._prefetchImageIds(priority);\n  };\n\n  protected getImageIdsRequests = (\n    imageIds: string[],\n    scalarData: Types.VolumeScalarData,\n    priority: number\n  ) => {\n    const { loadStatus } = this;\n    const { cachedFrames } = loadStatus;\n\n    const { vtkOpenGLTexture, imageData, metadata, volumeId } = this;\n    const { FrameOfReferenceUID } = metadata;\n\n    // SharedArrayBuffer\n    const arrayBuffer = scalarData.buffer;\n    const numFrames = imageIds.length;\n\n    // Length of one frame in voxels\n    const length = scalarData.length / numFrames;\n    // Length of one frame in bytes\n    const lengthInBytes = arrayBuffer.byteLength / numFrames;\n\n    let type;\n\n    if (scalarData instanceof Uint8Array) {\n      type = 'Uint8Array';\n    } else if (scalarData instanceof Float32Array) {\n      type = 'Float32Array';\n    } else if (scalarData instanceof Uint16Array) {\n      type = 'Uint16Array';\n    } else if (scalarData instanceof Int16Array) {\n      type = 'Int16Array';\n    } else {\n      throw new Error('Unsupported array type');\n    }\n\n    const totalNumFrames = this.imageIds.length;\n    const autoRenderOnLoad = true;\n    const autoRenderPercentage = 2;\n\n    let reRenderFraction;\n    let reRenderTarget;\n\n    if (autoRenderOnLoad) {\n      reRenderFraction = totalNumFrames * (autoRenderPercentage / 100);\n      reRenderTarget = reRenderFraction;\n    }\n\n    function callLoadStatusCallback(evt) {\n      // TODO: probably don't want this here\n\n      if (autoRenderOnLoad) {\n        if (\n          evt.framesProcessed > reRenderTarget ||\n          evt.framesProcessed === evt.totalNumFrames\n        ) {\n          reRenderTarget += reRenderFraction;\n          autoLoad(volumeId);\n        }\n      }\n\n      if (evt.framesProcessed === evt.totalNumFrames) {\n        loadStatus.callbacks.forEach((callback) => callback(evt));\n      }\n    }\n\n    const successCallback = (\n      imageIdIndex: number,\n      imageId: string,\n      scalingParameters\n    ) => {\n      const frameIndex = this._imageIdIndexToFrameIndex(imageIdIndex);\n\n      // Check if there is a cached image for the same imageURI (different\n      // data loader scheme)\n      const cachedImage = cache.getCachedImageBasedOnImageURI(imageId);\n\n      // check if the load was cancelled while we were waiting for the image\n      // if so we don't want to do anything\n      if (loadStatus.cancelled) {\n        console.warn(\n          'volume load cancelled, returning for imageIdIndex: ',\n          imageIdIndex\n        );\n        return;\n      }\n\n      if (!cachedImage || !cachedImage.image) {\n        return updateTextureAndTriggerEvents(this, imageIdIndex, imageId);\n      }\n      const imageScalarData = this._scaleIfNecessary(\n        cachedImage.image,\n        scalingParameters\n      );\n      // todo add scaling and slope\n      const { pixelsPerImage, bytesPerImage } = this.cornerstoneImageMetaData;\n      const TypedArray = scalarData.constructor;\n      let byteOffset = bytesPerImage * frameIndex;\n\n      // create a view on the volume arraybuffer\n      const bytePerPixel = bytesPerImage / pixelsPerImage;\n\n      if (scalarData.BYTES_PER_ELEMENT !== bytePerPixel) {\n        byteOffset *= scalarData.BYTES_PER_ELEMENT / bytePerPixel;\n      }\n\n      // @ts-ignore\n      const volumeBufferView = new TypedArray(\n        arrayBuffer,\n        byteOffset,\n        pixelsPerImage\n      );\n      cachedImage.imageLoadObject.promise\n        .then((image) => {\n          volumeBufferView.set(imageScalarData);\n          updateTextureAndTriggerEvents(this, imageIdIndex, imageId);\n        })\n        .catch((err) => {\n          errorCallback.call(this, err, imageIdIndex, imageId);\n        });\n      return;\n    };\n\n    const updateTextureAndTriggerEvents = (\n      volume: BaseStreamingImageVolume,\n      imageIdIndex,\n      imageId\n    ) => {\n      const frameIndex = this._imageIdIndexToFrameIndex(imageIdIndex);\n\n      cachedFrames[imageIdIndex] = true;\n      this.framesLoaded++;\n      this.framesProcessed++;\n\n      vtkOpenGLTexture.setUpdatedFrame(frameIndex);\n      imageData.modified();\n\n      const eventDetail: Types.EventTypes.ImageVolumeModifiedEventDetail = {\n        FrameOfReferenceUID,\n        imageVolume: volume,\n      };\n\n      triggerEvent(\n        eventTarget,\n        Enums.Events.IMAGE_VOLUME_MODIFIED,\n        eventDetail\n      );\n\n      if (this.framesProcessed === totalNumFrames) {\n        loadStatus.loaded = true;\n        loadStatus.loading = false;\n\n        // TODO: Should we remove the callbacks in favour of just using events?\n        callLoadStatusCallback({\n          success: true,\n          imageIdIndex,\n          imageId,\n          framesLoaded: this.framesLoaded,\n          framesProcessed: this.framesProcessed,\n          numFrames,\n          totalNumFrames,\n        });\n        loadStatus.callbacks = [];\n      } else {\n        callLoadStatusCallback({\n          success: true,\n          imageIdIndex,\n          imageId,\n          framesLoaded: this.framesLoaded,\n          framesProcessed: this.framesProcessed,\n          numFrames,\n          totalNumFrames,\n        });\n      }\n    };\n\n    function errorCallback(error, imageIdIndex, imageId) {\n      this.framesProcessed++;\n\n      if (this.framesProcessed === totalNumFrames) {\n        loadStatus.loaded = true;\n        loadStatus.loading = false;\n\n        callLoadStatusCallback({\n          success: false,\n          imageId,\n          imageIdIndex,\n          error,\n          framesLoaded: this.framesLoaded,\n          framesProcessed: this.framesProcessed,\n          numFrames,\n          totalNumFrames,\n        });\n\n        loadStatus.callbacks = [];\n      } else {\n        callLoadStatusCallback({\n          success: false,\n          imageId,\n          imageIdIndex,\n          error,\n          framesLoaded: this.framesLoaded,\n          framesProcessed: this.framesProcessed,\n          numFrames,\n          totalNumFrames,\n        });\n      }\n\n      const eventDetail = {\n        error,\n        imageIdIndex,\n        imageId,\n      };\n\n      triggerEvent(eventTarget, Enums.Events.IMAGE_LOAD_ERROR, eventDetail);\n    }\n\n    function handleArrayBufferLoad(scalarData, image, options) {\n      if (!(scalarData.buffer instanceof ArrayBuffer)) {\n        return;\n      }\n\n      const offset = options.targetBuffer.offset; // in bytes\n      const length = options.targetBuffer.length; // in frames\n      const pixelData = image.pixelData\n        ? image.pixelData\n        : image.getPixelData();\n\n      try {\n        if (scalarData instanceof Float32Array) {\n          const bytesInFloat = 4;\n          const floatView = new Float32Array(pixelData);\n          if (floatView.length !== length) {\n            throw 'Error pixelData length does not match frame length';\n          }\n          // since set is based on the underlying type,\n          // we need to divide the offset bytes by the byte type\n          scalarData.set(floatView, offset / bytesInFloat);\n        }\n        if (scalarData instanceof Int16Array) {\n          const bytesInInt16 = 2;\n          const intView = new Int16Array(pixelData);\n          if (intView.length !== length) {\n            throw 'Error pixelData length does not match frame length';\n          }\n          scalarData.set(intView, offset / bytesInInt16);\n        }\n        if (scalarData instanceof Uint16Array) {\n          const bytesInUint16 = 2;\n          const intView = new Uint16Array(pixelData);\n          if (intView.length !== length) {\n            throw 'Error pixelData length does not match frame length';\n          }\n          scalarData.set(intView, offset / bytesInUint16);\n        }\n        if (scalarData instanceof Uint8Array) {\n          const bytesInUint8 = 1;\n          const intView = new Uint8Array(pixelData);\n          if (intView.length !== length) {\n            throw 'Error pixelData length does not match frame length';\n          }\n          scalarData.set(intView, offset / bytesInUint8);\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    // 4D datasets load one time point at a time and the frameIndex is\n    // the position of the imageId in the current time point while the\n    // imageIdIndex is its absolute position in the array that contains\n    // all other imageIds. In a 4D dataset the frameIndex can also be\n    // calculated as `imageIdIndex % numFrames` where numFrames is the\n    // number of frames per time point. The frameIndex and imageIdIndex\n    // will be the same when working with 3D datasets.\n    const requests = imageIds.map((imageId, frameIndex) => {\n      const imageIdIndex = this.getImageIdIndex(imageId);\n\n      if (cachedFrames[imageIdIndex]) {\n        this.framesLoaded++;\n        this.framesProcessed++;\n        return;\n      }\n\n      const modalityLutModule =\n        metaData.get('modalityLutModule', imageId) || {};\n\n      const generalSeriesModule =\n        metaData.get('generalSeriesModule', imageId) || {};\n\n      const scalingParameters: Types.ScalingParameters = {\n        rescaleSlope: modalityLutModule.rescaleSlope,\n        rescaleIntercept: modalityLutModule.rescaleIntercept,\n        modality: generalSeriesModule.modality,\n      };\n\n      if (scalingParameters.modality === 'PT') {\n        const suvFactor = metaData.get('scalingModule', imageId);\n\n        if (suvFactor) {\n          this._addScalingToVolume(suvFactor);\n          scalingParameters.suvbw = suvFactor.suvbw;\n        }\n      }\n\n      const options = {\n        // WADO Image Loader\n        targetBuffer: {\n          // keeping this in the options means a large empty volume array buffer\n          // will be transferred to the worker. This is undesirable for streaming\n          // volume without shared array buffer because the target is now an empty\n          // 300-500MB volume array buffer. Instead the volume should be progressively\n          // set in the main thread.\n          arrayBuffer:\n            arrayBuffer instanceof ArrayBuffer ? undefined : arrayBuffer,\n          offset: frameIndex * lengthInBytes,\n          length,\n          type,\n        },\n        skipCreateImage: true,\n        preScale: {\n          enabled: true,\n          // we need to pass in the scalingParameters here, since the streaming\n          // volume loader doesn't go through the createImage phase in the loader,\n          // and therefore doesn't have the scalingParameters\n          scalingParameters,\n        },\n      };\n\n      // Use loadImage because we are skipping the Cornerstone Image cache\n      // when we load directly into the Volume cache\n      const callLoadImage = (imageId, imageIdIndex, options) => {\n        return imageLoader.loadImage(imageId, options).then(\n          (image) => {\n            // scalarData is the volume container we are progressively loading into\n            // image is the pixelData decoded from workers in cornerstoneDICOMImageLoader\n            handleArrayBufferLoad(scalarData, image, options);\n            successCallback(imageIdIndex, imageId, scalingParameters);\n          },\n          (error) => {\n            errorCallback.call(this, error, imageIdIndex, imageId);\n          }\n        );\n      };\n\n      return {\n        callLoadImage,\n        imageId,\n        imageIdIndex,\n        options,\n        priority,\n        requestType,\n        additionalDetails: {\n          volumeId: this.volumeId,\n        },\n      };\n    });\n\n    return requests;\n  };\n\n  /**\n   * It returns the imageLoad requests for the streaming image volume instance.\n   * It involves getting all the imageIds of the volume and creating a success callback\n   * which would update the texture (when the image has loaded) and the failure callback.\n   * Note that this method does not executes the requests but only returns the requests.\n   * It can be used for sorting requests outside of the volume loader itself\n   * e.g. loading a single slice of CT, followed by a single slice of PET (interleaved), before\n   * moving to the next slice.\n   *\n   * @returns Array of requests including imageId of the request, its imageIdIndex,\n   * options (targetBuffer and scaling parameters), and additionalDetails (volumeId)\n   */\n  public getImageLoadRequests(_priority: number): any[] {\n    throw new Error('Abstract method');\n  }\n\n  private _prefetchImageIds(priority: number): void {\n    // Note: here is the correct location to set the loading flag\n    // since getImageIdsRequest is just grabbing and building requests\n    // and not actually executing them\n    this.loadStatus.loading = true;\n\n    const requests = this.getImageLoadRequests(priority);\n\n    requests.reverse().forEach((request) => {\n      if (!request) {\n        // there is a cached image for the imageId and no requests will fire\n        return;\n      }\n\n      const {\n        callLoadImage,\n        imageId,\n        imageIdIndex,\n        options,\n        priority,\n        requestType,\n        additionalDetails,\n      } = request;\n\n      imageLoadPoolManager.addRequest(\n        callLoadImage.bind(this, imageId, imageIdIndex, options),\n        requestType,\n        additionalDetails,\n        priority\n      );\n    });\n  }\n\n  /**\n   * This function decides whether or not to scale the image based on the\n   * scalingParameters. If the image is already scaled, we should take that\n   * into account when scaling the image again, so if the rescaleSlope and/or\n   * rescaleIntercept are different from the ones that were used to scale the\n   * image, we should scale the image again according to the new parameters.\n   */\n  private _scaleIfNecessary(\n    image,\n    scalingParametersToUse: Types.ScalingParameters\n  ) {\n    const imageIsAlreadyScaled = image.preScale?.scaled;\n    const noScalingParametersToUse =\n      !scalingParametersToUse ||\n      !scalingParametersToUse.rescaleIntercept ||\n      !scalingParametersToUse.rescaleSlope;\n\n    if (!imageIsAlreadyScaled && noScalingParametersToUse) {\n      // no need to scale the image\n      return image.getPixelData().slice(0);\n    }\n\n    if (\n      !imageIsAlreadyScaled &&\n      scalingParametersToUse &&\n      scalingParametersToUse.rescaleIntercept !== undefined &&\n      scalingParametersToUse.rescaleSlope !== undefined\n    ) {\n      // if not already scaled, just scale the image.\n      // copy so that it doesn't get modified\n      const pixelDataCopy = image.getPixelData().slice(0);\n      const scaledArray = scaleArray(pixelDataCopy, scalingParametersToUse);\n      return scaledArray;\n    }\n\n    // if the image is already scaled,\n    const {\n      rescaleSlope: rescaleSlopeToUse,\n      rescaleIntercept: rescaleInterceptToUse,\n      suvbw: suvbwToUse,\n    } = scalingParametersToUse;\n\n    const {\n      rescaleSlope: rescaleSlopeUsed,\n      rescaleIntercept: rescaleInterceptUsed,\n      suvbw: suvbwUsed,\n    } = image.preScale.scalingParameters;\n\n    const rescaleSlopeIsSame = rescaleSlopeToUse === rescaleSlopeUsed;\n    const rescaleInterceptIsSame =\n      rescaleInterceptToUse === rescaleInterceptUsed;\n    const suvbwIsSame = suvbwToUse === suvbwUsed;\n\n    if (rescaleSlopeIsSame && rescaleInterceptIsSame && suvbwIsSame) {\n      // if the scaling parameters are the same, we don't need to scale the image again\n      return image.getPixelData();\n    }\n\n    const pixelDataCopy = image.getPixelData().slice(0);\n    // the general formula for scaling is  scaledPixelValue = suvbw * (pixelValue * rescaleSlope) + rescaleIntercept\n    const newSuvbw = suvbwToUse / suvbwUsed;\n    const newRescaleSlope = rescaleSlopeToUse / rescaleSlopeUsed;\n    const newRescaleIntercept =\n      rescaleInterceptToUse - rescaleInterceptUsed * newRescaleSlope;\n\n    const newScalingParameters = {\n      ...scalingParametersToUse,\n      rescaleSlope: newRescaleSlope,\n      rescaleIntercept: newRescaleIntercept,\n      suvbw: newSuvbw,\n    };\n\n    const scaledArray = scaleArray(pixelDataCopy, newScalingParameters);\n    return scaledArray;\n  }\n\n  private _addScalingToVolume(suvFactor) {\n    // Todo: handle case where suvFactors are not the same for all frames\n    if (this.scaling) {\n      return;\n    }\n\n    const { suvbw, suvlbm, suvbsa } = suvFactor;\n\n    const petScaling = <Types.PTScaling>{};\n\n    if (suvlbm) {\n      petScaling.suvbwToSuvlbm = suvlbm / suvbw;\n    }\n\n    if (suvbsa) {\n      petScaling.suvbwToSuvbsa = suvbsa / suvbw;\n    }\n\n    this.scaling = { PET: petScaling };\n    this.isPrescaled = true;\n  }\n\n  private _removeFromCache() {\n    // TODO: not 100% sure this is the same Id as the volume loader's volumeId?\n    // so I have no idea if this will work\n    cache.removeVolumeLoadObject(this.volumeId);\n  }\n\n  /**\n   * Converts the requested imageId inside the volume to a cornerstoneImage\n   * object. It uses the typedArray set method to copy the pixelData from the\n   * correct offset in the scalarData to a new array for the image\n   *\n   * @param imageId - the imageId of the image to be converted\n   * @param imageIdIndex - the index of the imageId in the imageIds array\n   * @returns imageLoadObject containing the promise that resolves\n   * to the cornerstone image\n   */\n  public convertToCornerstoneImage(\n    imageId: string,\n    imageIdIndex: number\n  ): Types.IImageLoadObject {\n    const { imageIds } = this;\n    const frameIndex = this._imageIdIndexToFrameIndex(imageIdIndex);\n\n    const {\n      bytesPerImage,\n      pixelsPerImage,\n      windowCenter,\n      windowWidth,\n      numComponents,\n      color,\n      dimensions,\n      spacing,\n      invert,\n      voiLUTFunction,\n    } = this.cornerstoneImageMetaData;\n\n    // 1. Grab the buffer and it's type\n    const scalarData = this._getScalarDataByImageIdIndex(imageIdIndex);\n    const volumeBuffer = scalarData.buffer;\n    // (not sure if this actually works, TypeScript keeps complaining)\n    const TypedArray = scalarData.constructor;\n\n    // 2. Given the index of the image and frame length in bytes,\n    //    create a view on the volume arraybuffer\n    const bytePerPixel = bytesPerImage / pixelsPerImage;\n\n    let byteOffset = bytesPerImage * frameIndex;\n\n    // If there is a discrepancy between the volume typed array\n    // and the bitsAllocated for the image. The reason is that VTK uses Float32\n    // on the GPU and if the type is not Float32, it will convert it. So for not\n    // having a performance issue, we convert all types initially to Float32 even\n    // if they are not Float32.\n    if (scalarData.BYTES_PER_ELEMENT !== bytePerPixel) {\n      byteOffset *= scalarData.BYTES_PER_ELEMENT / bytePerPixel;\n    }\n\n    // 3. Create a new TypedArray of the same type for the new\n    //    Image that will be created\n    // @ts-ignore\n    const imageScalarData = new TypedArray(pixelsPerImage);\n    // @ts-ignore\n    const volumeBufferView = new TypedArray(\n      volumeBuffer,\n      byteOffset,\n      pixelsPerImage\n    );\n\n    // 4. Use e.g. TypedArray.set() to copy the data from the larger\n    //    buffer's view into the smaller one\n    imageScalarData.set(volumeBufferView);\n\n    // 5. Create an Image Object from imageScalarData and put it into the Image cache\n    const volumeImageId = imageIds[imageIdIndex];\n    const modalityLutModule =\n      metaData.get('modalityLutModule', volumeImageId) || {};\n    const minMax = getMinMax(imageScalarData);\n    const intercept = modalityLutModule.rescaleIntercept\n      ? modalityLutModule.rescaleIntercept\n      : 0;\n\n    const image: Types.IImage = {\n      imageId,\n      intercept,\n      windowCenter,\n      windowWidth,\n      voiLUTFunction,\n      color,\n      numComps: numComponents,\n      rows: dimensions[0],\n      columns: dimensions[1],\n      sizeInBytes: imageScalarData.byteLength,\n      getPixelData: () => imageScalarData,\n      minPixelValue: minMax.min,\n      maxPixelValue: minMax.max,\n      slope: modalityLutModule.rescaleSlope\n        ? modalityLutModule.rescaleSlope\n        : 1,\n      getCanvas: undefined, // todo: which canvas?\n      height: dimensions[0],\n      width: dimensions[1],\n      rgba: undefined, // todo: how\n      columnPixelSpacing: spacing[0],\n      rowPixelSpacing: spacing[1],\n      invert,\n    };\n\n    // 5. Create the imageLoadObject\n    const imageLoadObject = {\n      promise: Promise.resolve(image),\n    };\n\n    return imageLoadObject;\n  }\n\n  /**\n   * Converts all the volume images (imageIds) to cornerstoneImages and caches them.\n   * It iterates over all the imageIds and convert them until there is no\n   * enough space left inside the imageCache. Finally it will decache the Volume.\n   *\n   */\n  private _convertToImages() {\n    // 1. Try to decache images in the volatile Image Cache to provide\n    //    enough space to store another entire copy of the volume (as Images).\n    //    If we do not have enough, we will store as many images in the cache\n    //    as possible, and the rest of the volume will be decached.\n    const byteLength = this.sizeInBytes;\n    const numImages = this.imageIds.length;\n    const { bytesPerImage } = this.cornerstoneImageMetaData;\n\n    let bytesRemaining = cache.decacheIfNecessaryUntilBytesAvailable(\n      byteLength,\n      this.imageIds\n    );\n\n    for (let imageIdIndex = 0; imageIdIndex < numImages; imageIdIndex++) {\n      const imageId = this.imageIds[imageIdIndex];\n\n      bytesRemaining = bytesRemaining - bytesPerImage;\n\n      // 2. Convert each imageId to a cornerstone Image object which is\n      // resolved inside the promise of imageLoadObject\n      const imageLoadObject = this.convertToCornerstoneImage(\n        imageId,\n        imageIdIndex\n      );\n\n      // 3. Caching the image\n      cache.putImageLoadObject(imageId, imageLoadObject).catch((err) => {\n        console.error(err);\n      });\n\n      // 4. If we know we won't be able to add another Image to the cache\n      //    without breaching the limit, stop here.\n      if (bytesRemaining <= bytesPerImage) {\n        break;\n      }\n    }\n    // 5. When as much of the Volume is processed into Images as possible\n    //    without breaching the cache limit, remove the Volume\n    this._removeFromCache();\n  }\n\n  /**\n   * If completelyRemove is true, remove the volume completely from the cache. Otherwise,\n   * convert the volume to cornerstone images (stack images) and store it in the cache\n   * @param completelyRemove - If true, the image will be removed from the\n   * cache completely.\n   */\n  public decache(completelyRemove = false): void {\n    if (completelyRemove) {\n      this._removeFromCache();\n    } else {\n      this._convertToImages();\n    }\n  }\n}\n","import { Types } from '@cornerstonejs/core';\nimport BaseStreamingImageVolume from './BaseStreamingImageVolume';\n\n/**\n * Streaming Image Volume Class that extends ImageVolume base class.\n * It implements load method to load the imageIds and insert them into the volume.\n */\nexport default class StreamingImageVolume extends BaseStreamingImageVolume {\n  constructor(\n    imageVolumeProperties: Types.IVolume,\n    streamingProperties: Types.IStreamingVolumeProperties\n  ) {\n    super(imageVolumeProperties, streamingProperties);\n  }\n\n  /**\n   * Return the scalar data (buffer)\n   * @returns volume scalar data\n   */\n  public getScalarData(): Types.VolumeScalarData {\n    return <Types.VolumeScalarData>this.scalarData;\n  }\n\n  /**\n   * It returns the imageLoad requests for the streaming image volume instance.\n   * It involves getting all the imageIds of the volume and creating a success callback\n   * which would update the texture (when the image has loaded) and the failure callback.\n   * Note that this method does not executes the requests but only returns the requests.\n   * It can be used for sorting requests outside of the volume loader itself\n   * e.g. loading a single slice of CT, followed by a single slice of PET (interleaved), before\n   * moving to the next slice.\n   *\n   * @returns Array of requests including imageId of the request, its imageIdIndex,\n   * options (targetBuffer and scaling parameters), and additionalDetails (volumeId)\n   */\n  public getImageLoadRequests = (priority: number) => {\n    const { imageIds } = this;\n    const scalarData = <Types.VolumeScalarData>this.scalarData;\n\n    return this.getImageIdsRequests(imageIds, scalarData, priority);\n  };\n}\n","import {\n  cache,\n  utilities,\n  Enums,\n  imageLoader,\n  imageLoadPoolManager,\n  getShouldUseSharedArrayBuffer,\n  getConfiguration,\n  utilities as csUtils,\n} from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nimport { makeVolumeMetadata, sortImageIdsAndGetSpacing } from './helpers';\nimport StreamingImageVolume from './StreamingImageVolume';\n\nconst {\n  createUint8SharedArray,\n  createFloat32SharedArray,\n  createUint16SharedArray,\n  createInt16SharedArray,\n} = utilities;\n\ninterface IVolumeLoader {\n  promise: Promise<StreamingImageVolume>;\n  cancel: () => void;\n  decache: () => void;\n}\n\n/**\n * It handles loading of a image by streaming in its imageIds. It will be the\n * volume loader if the schema for the volumeID is `cornerstoneStreamingImageVolume`.\n * This function returns a promise that resolves to the StreamingImageVolume instance.\n *\n * In order to use the cornerstoneStreamingImageVolumeLoader you should use\n * createAndCacheVolume helper from the cornerstone-core volumeLoader module.\n *\n * @param volumeId - The ID of the volume\n * @param options - options for loading, imageIds\n * @returns a promise that resolves to a StreamingImageVolume\n */\nfunction cornerstoneStreamingImageVolumeLoader(\n  volumeId: string,\n  options: {\n    imageIds: string[];\n  }\n): IVolumeLoader {\n  if (!options || !options.imageIds || !options.imageIds.length) {\n    throw new Error(\n      'ImageIds must be provided to create a streaming image volume'\n    );\n  }\n\n  const { useNorm16Texture, preferSizeOverAccuracy } =\n    getConfiguration().rendering;\n  const use16BitDataType = useNorm16Texture || preferSizeOverAccuracy;\n\n  async function getStreamingImageVolume() {\n    /**\n     * Check if we are using the `wadouri:` scheme, and if so, preload first,\n     * middle, and last image metadata as these are the images the current\n     * streaming image loader may explicitly request metadata from. The last image\n     * metadata would only be specifically requested if the imageId array order is\n     * reversed in the `sortImageIdsAndGetSpacing.ts` file.\n     */\n    if (options.imageIds[0].split(':')[0] === 'wadouri') {\n      const [middleImageIndex, lastImageIndex] = [\n        Math.floor(options.imageIds.length / 2),\n        options.imageIds.length - 1,\n      ];\n      const indexesToPrefetch = [0, middleImageIndex, lastImageIndex];\n      await Promise.all(\n        indexesToPrefetch.map((index) => {\n          return new Promise((resolve, reject) => {\n            const imageId = options.imageIds[index];\n            imageLoadPoolManager.addRequest(\n              async () => {\n                imageLoader\n                  .loadImage(imageId)\n                  .then(() => {\n                    console.log(`Prefetched imageId: ${imageId}`);\n                    resolve(true);\n                  })\n                  .catch((err) => {\n                    reject(err);\n                  });\n              },\n              Enums.RequestType.Prefetch,\n              { volumeId },\n              1 // priority\n            );\n          });\n        })\n      ).catch(console.error);\n    }\n\n    const { imageIds } = options;\n\n    const volumeMetadata = makeVolumeMetadata(imageIds);\n\n    // For a streaming volume, the data type cannot rely on cswil to load\n    // the proper array buffer type. This is because the target buffer container\n    // must be decided ahead of time.\n    // TODO: move this logic into CSWIL to avoid logic duplication.\n    // We check if scaling parameters are negative we choose Int16 instead of\n    // Uint16 for cases where BitsAllocated is 16.\n    const imageIdIndex = Math.floor(imageIds.length / 2);\n    const imageId = imageIds[imageIdIndex];\n    const scalingParameters = csUtils.getScalingParameters(imageId);\n    const hasNegativeRescale =\n      scalingParameters.rescaleIntercept < 0 ||\n      scalingParameters.rescaleSlope < 0;\n\n    const {\n      BitsAllocated,\n      PixelRepresentation,\n      PhotometricInterpretation,\n      ImageOrientationPatient,\n      PixelSpacing,\n      Columns,\n      Rows,\n    } = volumeMetadata;\n\n    const rowCosineVec = vec3.fromValues(\n      ImageOrientationPatient[0],\n      ImageOrientationPatient[1],\n      ImageOrientationPatient[2]\n    );\n    const colCosineVec = vec3.fromValues(\n      ImageOrientationPatient[3],\n      ImageOrientationPatient[4],\n      ImageOrientationPatient[5]\n    );\n\n    const scanAxisNormal = vec3.create();\n\n    vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n\n    const { zSpacing, origin, sortedImageIds } = sortImageIdsAndGetSpacing(\n      imageIds,\n      scanAxisNormal\n    );\n\n    const numFrames = imageIds.length;\n\n    // Spacing goes [1] then [0], as [1] is column spacing (x) and [0] is row spacing (y)\n    const spacing = <Types.Point3>[PixelSpacing[1], PixelSpacing[0], zSpacing];\n    const dimensions = <Types.Point3>[Columns, Rows, numFrames];\n    const direction = [\n      ...rowCosineVec,\n      ...colCosineVec,\n      ...scanAxisNormal,\n    ] as Types.Mat3;\n    const signed = PixelRepresentation === 1;\n    const numComponents = PhotometricInterpretation === 'RGB' ? 3 : 1;\n    const useSharedArrayBuffer = getShouldUseSharedArrayBuffer();\n    const length = dimensions[0] * dimensions[1] * dimensions[2];\n    const handleCache = (sizeInBytes) => {\n      if (!cache.isCacheable(sizeInBytes)) {\n        throw new Error(Enums.Events.CACHE_SIZE_EXCEEDED);\n      }\n      cache.decacheIfNecessaryUntilBytesAvailable(sizeInBytes);\n    };\n\n    let scalarData, sizeInBytes;\n    switch (BitsAllocated) {\n      case 8:\n        if (signed) {\n          throw new Error(\n            '8 Bit signed images are not yet supported by this plugin.'\n          );\n        }\n        sizeInBytes = length;\n        handleCache(sizeInBytes);\n        scalarData = useSharedArrayBuffer\n          ? createUint8SharedArray(length)\n          : new Uint8Array(length);\n        break;\n\n      case 16:\n        // Temporary fix for 16 bit images to use Float32\n        // until the new dicom image loader handler the conversion\n        // correctly\n        if (!use16BitDataType) {\n          sizeInBytes = length * 4;\n          scalarData = useSharedArrayBuffer\n            ? createFloat32SharedArray(length)\n            : new Float32Array(length);\n\n          break;\n        }\n\n        sizeInBytes = length * 2;\n        if (signed || hasNegativeRescale) {\n          handleCache(sizeInBytes);\n          scalarData = useSharedArrayBuffer\n            ? createInt16SharedArray(length)\n            : new Int16Array(length);\n          break;\n        }\n\n        if (!signed && !hasNegativeRescale) {\n          handleCache(sizeInBytes);\n          scalarData = useSharedArrayBuffer\n            ? createUint16SharedArray(length)\n            : new Uint16Array(length);\n          break;\n        }\n\n        // Default to Float32 again\n        sizeInBytes = length * 4;\n        handleCache(sizeInBytes);\n        scalarData = useSharedArrayBuffer\n          ? createFloat32SharedArray(length)\n          : new Float32Array(length);\n        break;\n\n      case 24:\n        sizeInBytes = length * numComponents;\n        handleCache(sizeInBytes);\n\n        // hacky because we don't support alpha channel in dicom\n        scalarData = useSharedArrayBuffer\n          ? createUint8SharedArray(length * numComponents)\n          : new Uint8Array(length * numComponents);\n        break;\n    }\n\n    const streamingImageVolume = new StreamingImageVolume(\n      // ImageVolume properties\n      {\n        volumeId,\n        metadata: volumeMetadata,\n        dimensions,\n        spacing,\n        origin,\n        direction,\n        scalarData,\n        sizeInBytes,\n      },\n      // Streaming properties\n      {\n        imageIds: sortedImageIds,\n        loadStatus: {\n          // todo: loading and loaded should be on ImageVolume\n          loaded: false,\n          loading: false,\n          cancelled: false,\n          cachedFrames: [],\n          callbacks: [],\n        },\n      }\n    );\n\n    return streamingImageVolume;\n  }\n\n  const streamingImageVolumePromise = getStreamingImageVolume();\n\n  return {\n    promise: streamingImageVolumePromise,\n    decache: () => {\n      streamingImageVolumePromise.then((streamingImageVolume) => {\n        streamingImageVolume.destroy();\n        streamingImageVolume = null;\n      });\n    },\n    cancel: () => {\n      streamingImageVolumePromise.then((streamingImageVolume) => {\n        streamingImageVolume.cancelLoading();\n      });\n    },\n  };\n}\n\nexport default cornerstoneStreamingImageVolumeLoader;\n","import { metaData } from '@cornerstonejs/core';\n\n// TODO: add support for other 4D tags as listed below\n// Supported 4D Tags\n//   (0018,1060) Trigger Time                   [NOK]\n//   (0018,0081) Echo Time                      [NOK]\n//   (0018,0086) Echo Number                    [NOK]\n//   (0020,0100) Temporal Position Identifier   [NOK]\n//   (0054,1300) FrameReferenceTime             [OK]\n\ninterface MappedFrameReferenceTime {\n  imageId: string;\n  frameReferenceTime: number;\n}\n\nconst groupBy = (array, key) => {\n  return array.reduce((rv, x) => {\n    (rv[x[key]] = rv[x[key]] || []).push(x);\n    return rv;\n  }, {});\n};\n\nfunction splitFramesByFrameReferenceTime(imageIds: string[]): string[][] {\n  const framesMetadata: Array<MappedFrameReferenceTime> = imageIds.map(\n    (imageId: string): MappedFrameReferenceTime => {\n      const petImageModule = metaData.get('petImageModule', imageId);\n      const { frameReferenceTime = 0 } = petImageModule ?? {};\n      return { imageId, frameReferenceTime };\n    }\n  );\n\n  const framesGroups = groupBy(framesMetadata, 'frameReferenceTime');\n  const sortedFrameReferenceTimes = Object.keys(framesGroups)\n    .map(Number.parseFloat)\n    .sort((a, b) => a - b);\n\n  const imageIdsGroups = sortedFrameReferenceTimes.map((key) =>\n    framesGroups[key].map((item) => item.imageId)\n  );\n\n  return imageIdsGroups;\n}\n\n/**\n * Split the imageIds array by 4D tags into groups. Each group must have the\n * same number of imageIds or the same imageIds array passed in is returned.\n * @param imageIds - array of imageIds\n * @returns imageIds grouped by 4D tags\n */\nfunction splitImageIdsBy4DTags(imageIds: string[]): string[][] {\n  const fncList = [splitFramesByFrameReferenceTime];\n\n  for (let i = 0; i < fncList.length; i++) {\n    const framesGroups = fncList[i](imageIds);\n\n    if (!framesGroups || framesGroups.length <= 1) {\n      // imageIds could not be split into groups\n      continue;\n    }\n\n    const framesPerGroup = framesGroups[0].length;\n    const groupsHaveSameLength = framesGroups.every(\n      (g) => g.length === framesPerGroup\n    );\n\n    if (groupsHaveSameLength) {\n      return framesGroups;\n    }\n  }\n\n  // return the same imagesIds for non-4D volumes\n  return [imageIds];\n}\n\nexport default splitImageIdsBy4DTags;\n","import { cache, utilities, Enums } from '@cornerstonejs/core';\nimport type { Types } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nimport makeVolumeMetadata from './makeVolumeMetadata';\nimport sortImageIdsAndGetSpacing from './sortImageIdsAndGetSpacing';\n\nconst { createUint8SharedArray, createFloat32SharedArray } = utilities;\n\nfunction getVolumeInfo(imageIds: string[]) {\n  const volumeMetadata = makeVolumeMetadata(imageIds);\n\n  const {\n    BitsAllocated,\n    PixelRepresentation,\n    PhotometricInterpretation,\n    ImageOrientationPatient,\n    PixelSpacing,\n    Columns,\n    Rows,\n  } = volumeMetadata;\n\n  const rowCosineVec = vec3.fromValues(\n    ImageOrientationPatient[0],\n    ImageOrientationPatient[1],\n    ImageOrientationPatient[2]\n  );\n\n  const colCosineVec = vec3.fromValues(\n    ImageOrientationPatient[3],\n    ImageOrientationPatient[4],\n    ImageOrientationPatient[5]\n  );\n\n  const scanAxisNormal = vec3.create();\n\n  vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n\n  const { zSpacing, origin, sortedImageIds } = sortImageIdsAndGetSpacing(\n    imageIds,\n    scanAxisNormal\n  );\n\n  const numFrames = imageIds.length;\n\n  // Spacing goes [1] then [0], as [1] is column spacing (x) and [0] is row spacing (y)\n  const spacing = <Types.Point3>[PixelSpacing[1], PixelSpacing[0], zSpacing];\n  const dimensions = <Types.Point3>[Columns, Rows, numFrames];\n  const direction = [\n    ...rowCosineVec,\n    ...colCosineVec,\n    ...scanAxisNormal,\n  ] as Types.Mat3;\n  const signed = PixelRepresentation === 1;\n\n  // Check if it fits in the cache before we allocate data\n  // TODO Improve this when we have support for more types\n  // NOTE: We use 4 bytes per voxel as we are using Float32.\n  const bytesPerVoxel = BitsAllocated === 16 ? 4 : 1;\n  const sizeInBytesPerComponent =\n    bytesPerVoxel * dimensions[0] * dimensions[1] * dimensions[2];\n\n  let numComponents = 1;\n  if (PhotometricInterpretation === 'RGB') {\n    numComponents = 3;\n  }\n\n  const sizeInBytes = sizeInBytesPerComponent * numComponents;\n\n  // check if there is enough space in unallocated + image Cache\n  const isCacheable = cache.isCacheable(sizeInBytes);\n  if (!isCacheable) {\n    throw new Error(Enums.Events.CACHE_SIZE_EXCEEDED);\n  }\n\n  cache.decacheIfNecessaryUntilBytesAvailable(sizeInBytes);\n\n  let scalarData;\n\n  switch (BitsAllocated) {\n    case 8:\n      if (signed) {\n        throw new Error(\n          '8 Bit signed images are not yet supported by this plugin.'\n        );\n      } else {\n        scalarData = createUint8SharedArray(\n          dimensions[0] * dimensions[1] * dimensions[2]\n        );\n      }\n\n      break;\n\n    case 16:\n      scalarData = createFloat32SharedArray(\n        dimensions[0] * dimensions[1] * dimensions[2]\n      );\n\n      break;\n\n    case 24:\n      // hacky because we don't support alpha channel in dicom\n      scalarData = createUint8SharedArray(\n        dimensions[0] * dimensions[1] * dimensions[2] * numComponents\n      );\n\n      break;\n  }\n\n  return {\n    metadata: volumeMetadata,\n    sortedImageIds,\n    dimensions,\n    spacing,\n    origin,\n    direction,\n    scalarData,\n    sizeInBytes,\n  };\n}\n\nexport { getVolumeInfo, getVolumeInfo as default };\n","import type { Types } from '@cornerstonejs/core';\nimport BaseStreamingImageVolume from './BaseStreamingImageVolume';\n\ntype TimePoint = {\n  /** imageIds of each timepoint  */\n  imageIds: Array<string>;\n  /** volume scalar data  */\n  scalarData: Float32Array | Uint8Array | Uint16Array | Int16Array;\n};\n\n/**\n * Streaming Image Volume Class that extends StreamingImageVolume base class.\n * It implements load method to load the imageIds and insert them into the volume.\n */\nexport default class StreamingDynamicImageVolume\n  extends BaseStreamingImageVolume\n  implements Types.IDynamicImageVolume\n{\n  private _numTimePoints: number;\n  private _timePoints: TimePoint[];\n  private _timePointIndex = 0;\n\n  constructor(\n    imageVolumeProperties: Types.IVolume,\n    streamingProperties: Types.IStreamingVolumeProperties\n  ) {\n    StreamingDynamicImageVolume._ensureValidData(\n      imageVolumeProperties,\n      streamingProperties\n    );\n\n    super(imageVolumeProperties, streamingProperties);\n    this._numTimePoints = (<Types.VolumeScalarData[]>this.scalarData).length;\n    this._timePoints = this._getTimePointsData();\n  }\n\n  private static _ensureValidData(\n    imageVolumeProperties: Types.IVolume,\n    streamingProperties: Types.IStreamingVolumeProperties\n  ): void {\n    const imageIds = streamingProperties.imageIds;\n    const scalarDataArrays = <Types.VolumeScalarData[]>(\n      imageVolumeProperties.scalarData\n    );\n\n    if (imageIds.length % scalarDataArrays.length !== 0) {\n      throw new Error(\n        `Number of imageIds is not a multiple of ${scalarDataArrays.length}`\n      );\n    }\n  }\n\n  /**\n   * Use the image ids and scalar data array to create TimePoint objects\n   * and make it a bit easier to work with when loading requests\n   */\n  private _getTimePointsData(): TimePoint[] {\n    const { imageIds } = this;\n    const scalarData = <Types.VolumeScalarData[]>this.scalarData;\n\n    const { numFrames } = this;\n    const numTimePoints = scalarData.length;\n    const timePoints: TimePoint[] = [];\n\n    for (let i = 0; i < numTimePoints; i++) {\n      const start = i * numFrames;\n      const end = start + numFrames;\n\n      timePoints.push({\n        imageIds: imageIds.slice(start, end),\n        scalarData: scalarData[i],\n      });\n    }\n\n    return timePoints;\n  }\n\n  private _getTimePointsToLoad() {\n    const timePoints = this._timePoints;\n    const initialTimePointIndex = this._timePointIndex;\n    const timePointsToLoad = [timePoints[initialTimePointIndex]];\n\n    let leftIndex = initialTimePointIndex - 1;\n    let rightIndex = initialTimePointIndex + 1;\n\n    while (leftIndex >= 0 || rightIndex < timePoints.length) {\n      if (leftIndex >= 0) {\n        timePointsToLoad.push(timePoints[leftIndex--]);\n      }\n\n      if (rightIndex < timePoints.length) {\n        timePointsToLoad.push(timePoints[rightIndex++]);\n      }\n    }\n\n    return timePointsToLoad;\n  }\n\n  private _getTimePointRequests = (timePoint, priority: number) => {\n    const { imageIds, scalarData } = timePoint;\n\n    return this.getImageIdsRequests(imageIds, scalarData, priority);\n  };\n\n  private _getTimePointsRequests = (priority: number) => {\n    const timePoints = this._getTimePointsToLoad();\n    let timePointsRequests = [];\n\n    timePoints.forEach((timePoint) => {\n      const timePointRequests = this._getTimePointRequests(timePoint, priority);\n      timePointsRequests = timePointsRequests.concat(timePointRequests);\n    });\n\n    return timePointsRequests;\n  };\n\n  /** return true if it is a 4D volume or false if it is 3D volume */\n  public isDynamicVolume(): boolean {\n    return true;\n  }\n\n  /**\n   * Returns the active time point index\n   * @returns active time point index\n   */\n  public get timePointIndex(): number {\n    return this._timePointIndex;\n  }\n\n  /**\n   * Set the active time point index which also updates the active scalar data\n   * @returns current time point index\n   */\n  public set timePointIndex(newTimePointIndex: number) {\n    if (newTimePointIndex < 0 || newTimePointIndex >= this.numTimePoints) {\n      throw new Error(`Invalid timePointIndex (${newTimePointIndex})`);\n    }\n\n    // Nothing to do when time point index does not change\n    if (this._timePointIndex === newTimePointIndex) {\n      return;\n    }\n\n    const { imageData } = this;\n\n    this._timePointIndex = newTimePointIndex;\n    imageData.getPointData().setActiveScalars(`timePoint-${newTimePointIndex}`);\n    this.invalidateVolume(true);\n  }\n\n  /**\n   * Returns the number of time points\n   * @returns number of time points\n   */\n  public get numTimePoints(): number {\n    return this._numTimePoints;\n  }\n\n  /**\n   * Return the active scalar data (buffer)\n   * @returns volume scalar data\n   */\n  public getScalarData(): Types.VolumeScalarData {\n    return (<Types.VolumeScalarData[]>this.scalarData)[this._timePointIndex];\n  }\n\n  /**\n   * It returns the imageLoad requests for the streaming image volume instance.\n   * It involves getting all the imageIds of the volume and creating a success callback\n   * which would update the texture (when the image has loaded) and the failure callback.\n   * Note that this method does not executes the requests but only returns the requests.\n   * It can be used for sorting requests outside of the volume loader itself\n   * e.g. loading a single slice of CT, followed by a single slice of PET (interleaved), before\n   * moving to the next slice.\n   *\n   * @returns Array of requests including imageId of the request, its imageIdIndex,\n   * options (targetBuffer and scaling parameters), and additionalDetails (volumeId)\n   */\n  public getImageLoadRequests = (priority: number) => {\n    // It returns all requests in reversed order because BaseStreamingImageVolume\n    // reverse all requests again otherwise it would load from last to first time point\n    return this._getTimePointsRequests(priority).reverse();\n  };\n}\n","import { getVolumeInfo, splitImageIdsBy4DTags } from './helpers';\nimport StreamingDynamicImageVolume from './StreamingDynamicImageVolume';\n\ninterface IVolumeLoader {\n  promise: Promise<StreamingDynamicImageVolume>;\n  cancel: () => void;\n  decache: () => void;\n}\n\nfunction get4DVolumeInfo(imageIds: string[]) {\n  const imageIdsGroups = splitImageIdsBy4DTags(imageIds);\n  return imageIdsGroups.map((imageIds) => getVolumeInfo(imageIds));\n}\n\n/**\n * It handles loading of a image by streaming in its imageIds. It will be the\n * volume loader if the schema for the volumeID is `cornerstoneStreamingImageVolume`.\n * This function returns a promise that resolves to the StreamingDynamicImageVolume instance.\n *\n * In order to use the cornerstoneStreamingDynamicImageVolumeLoader you should use\n * createAndCacheVolume helper from the cornerstone-core volumeLoader module.\n *\n * @param volumeId - The ID of the volume\n * @param options - options for loading, imageIds\n * @returns a promise that resolves to a StreamingDynamicImageVolume\n */\nfunction cornerstoneStreamingDynamicImageVolumeLoader(\n  volumeId: string,\n  options: {\n    imageIds: string[];\n  }\n): IVolumeLoader {\n  if (!options || !options.imageIds || !options.imageIds.length) {\n    throw new Error(\n      'ImageIds must be provided to create a 4D streaming image volume'\n    );\n  }\n\n  const { imageIds } = options;\n  const volumesInfo = get4DVolumeInfo(imageIds);\n\n  const {\n    metadata: volumeMetadata,\n    dimensions,\n    spacing,\n    origin,\n    direction,\n    sizeInBytes,\n  } = volumesInfo[0];\n\n  const sortedImageIdsArrays = [];\n  const scalarDataArrays = [];\n\n  volumesInfo.forEach((volumeInfo) => {\n    sortedImageIdsArrays.push(volumeInfo.sortedImageIds);\n    scalarDataArrays.push(volumeInfo.scalarData);\n  });\n\n  let streamingImageVolume = new StreamingDynamicImageVolume(\n    // ImageVolume properties\n    {\n      volumeId,\n      metadata: volumeMetadata,\n      dimensions,\n      spacing,\n      origin,\n      direction,\n      scalarData: scalarDataArrays,\n      sizeInBytes,\n    },\n    // Streaming properties\n    {\n      imageIds: sortedImageIdsArrays.flat(),\n      loadStatus: {\n        // todo: loading and loaded should be on ImageVolume\n        loaded: false,\n        loading: false,\n        cancelled: false,\n        cachedFrames: [],\n        callbacks: [],\n      },\n    }\n  );\n\n  return {\n    promise: Promise.resolve(streamingImageVolume),\n    decache: () => {\n      streamingImageVolume.destroy();\n      streamingImageVolume = null;\n    },\n    cancel: () => {\n      streamingImageVolume.cancelLoading();\n    },\n  };\n}\n\nexport default cornerstoneStreamingDynamicImageVolumeLoader;\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__953__","__WEBPACK_EXTERNAL_MODULE__976__","runtime","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis","Function","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","a","definition","o","get","prop","r","_arrayLikeToArray","arr","len","arr2","Array","_toConsumableArray","isArray","from","minLen","toString","test","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","makeVolumeMetadata","imageIds","voiLUTFunction","imageId0","metaData","pixelRepresentation","bitsAllocated","bitsStored","highBit","photometricInterpretation","samplesPerPixel","voiLut","voiLutModule","windowWidth","windowCenter","modality","seriesInstanceUID","BitsAllocated","BitsStored","SamplesPerPixel","HighBit","PhotometricInterpretation","PixelRepresentation","Modality","ImageOrientationPatient","imageOrientationPatient","PixelSpacing","pixelSpacing","FrameOfReferenceUID","frameOfReferenceUID","Columns","columns","Rows","rows","VOILUTFunction","SeriesInstanceUID","sortImageIdsAndGetSpacing","scanAxisNormal","sortedImageIds","zSpacing","referenceImagePositionPatient","imagePositionPatient","refIppVec","vec3","usingWadoUri","split","getDistance","imageId","positionVector","prefetchedImageIds","Math","floor","metadataForMiddleImage","distanceBetweenFirstAndMiddleImages","abs","distanceImagePairs","map","distance","sort","b","numImages","origin","sliceThickness","strictZSpacingForVolumeViewport","getConfiguration","rendering","console","log","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","_assertThisInitialized","ReferenceError","_setPrototypeOf","p","_inherits","subClass","superClass","_typeof","_possibleConstructorReturn","_getPrototypeOf","_defineProperty","volumeId","renderingEngineAndViewportIds","renderingEnginesArray","getRenderingEngines","renderingEngine","viewports","utilities","id","viewportIds","viewport","getRenderingEngineAndViewportsContainingVolume","hasBeenDestroyed","renderViewports","scaleArray","array","scalingParameters","arrayLength","rescaleSlope","rescaleIntercept","suvbw","requestType","Enums","getMinMax","csUtils","BaseStreamingImageVolume","imageVolumeProperties","streamingProperties","loadStatus","loading","cancelled","clearLoadCallbacks","imageLoadPoolManager","additionalDetails","callback","priority","numFrames","loaded","totalNumFrames","success","framesLoaded","framesProcessed","callbacks","_prefetchImageIds","scalarData","cachedFrames","vtkOpenGLTexture","imageData","metadata","arrayBuffer","buffer","lengthInBytes","byteLength","Uint8Array","Float32Array","Uint16Array","Int16Array","reRenderFraction","reRenderTarget","callLoadStatusCallback","evt","autoLoad","updateTextureAndTriggerEvents","volume","imageIdIndex","frameIndex","_imageIdIndexToFrameIndex","setUpdatedFrame","modified","eventDetail","imageVolume","triggerEvent","eventTarget","errorCallback","requests","getImageIdIndex","modalityLutModule","generalSeriesModule","suvFactor","_addScalingToVolume","callLoadImage","options","imageLoader","image","ArrayBuffer","offset","targetBuffer","pixelData","getPixelData","floatView","set","intView","e","handleArrayBufferLoad","cachedImage","cache","warn","imageScalarData","_scaleIfNecessary","cornerstoneImageMetaData","pixelsPerImage","bytesPerImage","TypedArray","byteOffset","bytePerPixel","BYTES_PER_ELEMENT","volumeBufferView","imageLoadObject","promise","catch","successCallback","skipCreateImage","preScale","enabled","_getNumFrames","_createCornerstoneImageMetaData","scalarDataCount","isDynamicVolume","sizeInBytes","numComponents","_getScalarDataLength","numVoxels","dimensions","voi","color","spacing","invert","getScalarDataArrays","immediate","_priority","getImageLoadRequests","request","bind","scalingParametersToUse","imageIsAlreadyScaled","scaled","noScalingParametersToUse","rescaleSlopeToUse","rescaleInterceptToUse","suvbwToUse","rescaleSlopeUsed","rescaleInterceptUsed","suvbwUsed","newSuvbw","newRescaleSlope","newRescaleIntercept","scaling","suvlbm","suvbsa","petScaling","suvbwToSuvlbm","suvbwToSuvbsa","PET","isPrescaled","_getScalarDataByImageIdIndex","volumeBuffer","volumeImageId","minMax","intercept","numComps","minPixelValue","min","maxPixelValue","max","slope","getCanvas","height","width","rgba","columnPixelSpacing","rowPixelSpacing","bytesRemaining","convertToCornerstoneImage","_removeFromCache","completelyRemove","_convertToImages","ImageVolume","StreamingImageVolume","getImageIdsRequests","createUint8SharedArray","createFloat32SharedArray","createUint16SharedArray","createInt16SharedArray","useNorm16Texture","preferSizeOverAccuracy","use16BitDataType","indexesToPrefetch","all","index","volumeMetadata","hasNegativeRescale","rowCosineVec","colCosineVec","direction","signed","useSharedArrayBuffer","getShouldUseSharedArrayBuffer","handleCache","streamingImageVolume","streamingImageVolumePromise","getStreamingImageVolume","decache","destroy","cancel","cancelLoading","splitFramesByFrameReferenceTime","framesMetadata","petImageModule","frameReferenceTime","framesGroups","reduce","rv","x","imageIdsGroups","Number","parseFloat","item","StreamingDynamicImageVolume","_ensureValidData","timePoint","timePoints","_getTimePointsToLoad","timePointsRequests","timePointRequests","_getTimePointRequests","concat","_getTimePointsRequests","_numTimePoints","_timePoints","_getTimePointsData","numTimePoints","start","end","initialTimePointIndex","_timePointIndex","timePointsToLoad","leftIndex","rightIndex","newTimePointIndex","getPointData","setActiveScalars","invalidateVolume","scalarDataArrays","get4DVolumeInfo","fncList","framesPerGroup","every","g","splitImageIdsBy4DTags","getVolumeInfo","volumesInfo","sortedImageIdsArrays","volumeInfo","flat"],"sourceRoot":""}